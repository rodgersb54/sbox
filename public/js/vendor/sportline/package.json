{
  "name": "sportline",
  "description": "strives to be like a normal sports stopwatch",
  "keywords": [
    "stopwatch",
    "timer",
    "sports"
  ],
  "version": "0.1.0",
  "author": {
    "name": "Peter Brandt",
    "email": "peter.m.brandt@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/pbrandt1/sportline.git"
  },
  "bugs": {
    "url": "https://github.com/pbrandt1/sportline/issues"
  },
  "engines": [
    "node >= 0.8.0"
  ],
  "main": "index.js",
  "dependencies": {},
  "devDependencies": {
    "grunt": "latest",
    "grunt-contrib-watch": "latest",
    "grunt-contrib-uglify": "~0.2.2",
    "grunt-mocha": "~0.4.1",
    "grunt-contrib-jshint": "~0.6.4",
    "grunt-release": "~0.5.1",
    "should": "~1.3.0",
    "grunt-mocha-cli": "~1.2.1"
  },
  "readme": "# sportline\nstrives to be like a normal sports stopwatch\n## How to use\n```\nnpm install sportline\n```\n\n```js\nvar sportline = require('sportline');\nvar timer = new sportline.Stopwatch();\n\ntimer.start();\n// ...do some stuff\nvar currentTime = timer.read();\n// currentTime: \"01:12 130\" (minutes, seconds, and milliseconds)\nvar currentTimeMs = timer.readMs();\n// currentTimeMs: 72131 (number of elapsed milliseconds)\n// ...do some more stuff\ntimer.lap();\n// ...do another lap\ntimer.stop();\ntimer.lap(); // this just lets you add the most recent interval to the laps array\n\nvar laps = timer.getLaps();\n// laps: [\"08:23 111\", \"08:30 803\"]\nvar lapsMs = timer.getLapsMs();\n// laps: [503111, 510803]\n```\n## Constructors\n```js\nvar timer = new sportline.Stopwatch();\n```\n\n## Functions\n### start\n```js\ntimer.start();\n```\n### stop\nPauses timer.  Does not trigger an addition to the laps array.\n```js\ntimer.stop();\n```\n### read\nreturns a string formatted like this: \"00:00 000\" (minuntes, seconds, milliseconds)\n```js\nvar now = timer.read();\n```\n### readMs\nreturns the number of elapsed milliseconds\n```js\nvar nowMs = timer.readMs();\n```\n### lap\ninserts the most recent interval into the lap array.\n```js\ntimer.lap();\n```\n### getLaps\nreturns an array of string-formated interval times\n```js\nvar log = timer.getLaps();\n```\n### getLapsMs\nreturns an array of interval times in milliseconds\n```js\nvar logMs = timer.getLapsMs();\n```\n\n## Future Development Ideas (feel free to contribute)\n*add finisher array\n*add countdown timer\n*add string format options\n*widgetize for use in browser.  be able to bind divs to hrs, mins, secs, and ms (or all of them) and spin up the numbers in real time.\n",
  "readmeFilename": "README.md",
  "_id": "sportline@0.1.0",
  "dist": {
    "shasum": "f86f927c65eaf11500164df00996f023c49e5d47",
    "tarball": "http://registry.npmjs.org/sportline/-/sportline-0.1.0.tgz"
  },
  "_from": "sportline@latest",
  "_npmVersion": "1.3.8",
  "_npmUser": {
    "name": "pbrandt1",
    "email": "peter.m.brandt@gmail.com"
  },
  "maintainers": [
    {
      "name": "pbrandt1",
      "email": "peter.m.brandt@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "f86f927c65eaf11500164df00996f023c49e5d47",
  "_resolved": "https://registry.npmjs.org/sportline/-/sportline-0.1.0.tgz"
}
